# Логи будут прилетать из beats'ов по порту 5044
input {
  beats {
    port => 5044
  }
}

filter {
  if [fields][service] == ["test", "test"]{
    grok{
      match => { "message" => "%{TIMESTAMP_ISO8601:Time},%{NUMBER:Priority} .*DEBUG %{WORD:Logger} %{NUMBER:RandomNumber} %{WORD:RandomSymbols} %{GREEDYDATA:Message}"} 
    }
    grok{
      match => { "message" => "%{TIMESTAMP_ISO8601:Time},%{NUMBER:Priority} .*ERROR %{WORD:Logger} %{GREEDYDATA:Message}"} 
    }
#    grok{
#      match => { "message" => "%{GREEDYDATA:Message}"} 
#    }
    grok{
      match => { "message" => "%{TIMESTAMP_ISO8601:Time},%{NUMBER:Priority}.*INFO %{WORD:Logger}.*null %{WORD:RandomSymbols}.*Random .*info %{NUMBER:RandomNumber} .*message"}
    }
  }
}

output {
  # Отображаем лог в stdout
  stdout {}
  if [fields][service] == ["test", "test"] {
     elasticsearch {
      hosts => "elasticsearch:9200"
      index => "test-new123-%{+YYYY.MM.dd}"
      user => "elastic"
      password => "MyPw123"
    }  
  }
}


output {
  stdout{}
  if [input][type] == ["container", "container"] {
    	elasticsearch {
         hosts => "elasticsearch:9200"
         index => "docker-%{[container][name]}-%{+YYYY.MM.dd}"
         user => "elastic"
         password => "MyPw123"
    }
  } 
}

output {
  # Отображаем лог в stdout
  stdout {}
  if [input][type] == ["container", "container"] {
     file {
       path => "/host_metrics_app/docker_output.log"
#       codec => line { format => "custom format: %{message}"} 
    }
  }
}
